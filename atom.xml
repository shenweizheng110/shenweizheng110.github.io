<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>唯你の博客</title>
  
  <subtitle>记录生活学习中的事迹或bug</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-11-10T04:26:58.895Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>ShenWeiZheng</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>腾讯云服务器配置JDK，tomcat解决外网无法访问问题</title>
    <link href="http://yoursite.com/2018/11/10/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8%E9%85%8D%E7%BD%AEJDK%EF%BC%8Ctomcat%E8%A7%A3%E5%86%B3%E5%A4%96%E7%BD%91%E6%97%A0%E6%B3%95%E8%AE%BF%E9%97%AE%E9%97%AE%E9%A2%98/"/>
    <id>http://yoursite.com/2018/11/10/腾讯云服务器配置JDK，tomcat解决外网无法访问问题/</id>
    <published>2018-11-10T04:26:52.541Z</published>
    <updated>2018-11-10T04:26:58.895Z</updated>
    
    <content type="html"><![CDATA[<p>前几天试了一下腾讯云的学生服务器，在配置tomcat的时候，配置了好久，一直都是无法访问主页，翻看了N多的博客，关了防火墙，配置了安全组，依旧无法访问，接下来改了tomcat的配置终于成功，记录一下。<br>我用的是腾讯云的学生服务器，操作系统是CentOS7.2 64位 JDK版本是1.8.0 tomcat版本是8.5.34<br>准备一下XShell工具，我是使用的XShell。还有一个WinScp工具用来上传文件，当然也可以使用命令，但是我感觉有点慢，不懂是不是错觉。</p><h2 id="1-配置JDK"><a href="#1-配置JDK" class="headerlink" title="1.配置JDK"></a>1.配置JDK</h2><p>网上看到了很多配置jdk的方法，相对而言，配置一下jdk还是很简单。我是使用的直接解压linux版本的jdk文件然后配置下环境变量，当然也有的是直接使用yum安装jdk。那么我们首先去<a href="https://www.oracle.com/technetwork/java/javase/downloads/jdk8-downloads-2133151.html" target="_blank" rel="noopener">jdk官网</a>下载一下jdk<br><img src="http://static.zybuluo.com/shenweizheng/d6as8u57y5cwx0zklb2l8ubg/image_1crsc1nek1797gbtv7i1rfvpiv9.png" alt="image_1crsc1nek1797gbtv7i1rfvpiv9.png-103.2kB"></p><p>这边我们用的是后缀为.tar.gz的，这是linux版本的<br>使用我们的WinScp工具把我们刚刚的下载的jdk上传至我们的服务器。用XShell登录进服务器，这边有一个问题就是我看到有的博客是说一开始进去的时候不是root用户但是我这边是进去就是root用户。下面的所有的配置我们都是要在root用户下进行的。<br><img src="http://static.zybuluo.com/shenweizheng/dpu4hunouaswrrmozaq12750/image_1crscssno10vipt7m0e37m1rfd13.png" alt="image_1crscssno10vipt7m0e37m1rfd13.png-21.9kB"></p><p>如果你不是root用户而是ubuntu用户那么<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sudo su</span></span><br></pre></td></tr></table></figure></p><p>切换进root用户，当然我没有遇到这个问题。<br><img src="http://static.zybuluo.com/shenweizheng/jewd66ybvwimbvixxk3lxl4f/image_1crtp2a1sb8t10vtdsd1475dgs9.png" alt="image_1crtp2a1sb8t10vtdsd1475dgs9.png-25.8kB"><br>ls一下查看现在的根目录，解压jdk</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf jdk-<span class="number">8</span>u191-linux-x64<span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br></pre></td></tr></table></figure><p>ls查看一下解压成功</p><p><img src="http://static.zybuluo.com/shenweizheng/r5nqg0utk1vumr6jqro13xkp/image_1crtp97csdms3kc15pv10c01jkr16.png" alt="image_1crtp97csdms3kc15pv10c01jkr16.png-7.4kB"></p><p>接下来在/usr下面创建一下文件夹叫java</p><p><img src="http://static.zybuluo.com/shenweizheng/o3c26xka6jvyiwo7nesvgiv9/image_1crtpt60a3271k911pcd1c4boqf1j.png" alt="image_1crtpt60a3271k911pcd1c4boqf1j.png-10.8kB"></p><p>接下来把我们解压好的jdk放到上一步创建的文件夹下面</p><p><img src="http://static.zybuluo.com/shenweizheng/9qxwwuaubcriiuqy62j7jg38/image_1crtq214a1r2lav3t7svm8144c20.png" alt="image_1crtq214a1r2lav3t7svm8144c20.png-5kB"></p><p>下面就是配置jdk的环境变量，我们需要修改 /etc/profile文件</p><p><img src="http://static.zybuluo.com/shenweizheng/hretoz8xtgh5byccpiydt2fj/image_1crtq922b1kt1jmb15ri16on5sb2d.png" alt="image_1crtq922b1kt1jmb15ri16on5sb2d.png-2.7kB"></p><p>配置一下JAVA_HOME CLASSPATH PATH<br><img src="http://static.zybuluo.com/shenweizheng/gogfsd3z7zlxc8zjcvfk8gfy/image_1crtqakkmm3s1a6103c1duq1be2q.png" alt="image_1crtqakkmm3s1a6103c1duq1be2q.png-75.5kB"></p><p>按esc之后 :wq 保存退出编辑，不得不说linux命令还是要会的，多多少少会用到linux的东西<br>使用source命令使我们刚刚做的修改生效，使用java -version检查我们的配置是否正确<br><img src="http://static.zybuluo.com/shenweizheng/wx9rjeszrp6a80sx5x2lnffr/image_1crtqesme1pmnldm1ltm12u71uq737.png" alt="image_1crtqesme1pmnldm1ltm12u71uq737.png-15.3kB"></p><p>到此为止jdk的配置已经做完了，下面就是tomcat的配置，也是本章的重点，拿笔开始记笔记了。</p><h2 id="2-Tomcat配置以及外网无法访问问题"><a href="#2-Tomcat配置以及外网无法访问问题" class="headerlink" title="2.Tomcat配置以及外网无法访问问题"></a>2.Tomcat配置以及外网无法访问问题</h2><p>首先第一步我们得去下一个tomcat和jdk一样，这边给一个传送门<a href="https://tomcat.apache.org/download-80.cgi" target="_blank" rel="noopener">tomcat8.5</a><br><img src="http://static.zybuluo.com/shenweizheng/7i5yo5ja413q6abv4oflxlg8/image_1crtqmg8s4ap1joo1ls219a2140k3k.png" alt="image_1crtqmg8s4ap1joo1ls219a2140k3k.png-93.4kB"></p><p>老样子还是下.tar.gz的，接下来上传tomcat，解压tomcat，将解压好的文件夹移至我们的/usr/java文件夹下面，当然你也可以重新建一个，这都是小事。</p><p>我们进入java文件夹，ls一下现在是有两个文件夹，一个是我们上面的jdk另一个是刚刚的tomcat</p><p><img src="http://static.zybuluo.com/shenweizheng/1jujj0042crmuqpr3nhq01he/image_1crtqu1pvaag1fcn4ld123vpdl41.png" alt="image_1crtqu1pvaag1fcn4ld123vpdl41.png-9.4kB"></p><p>那么下面就是tomcat的问题，首先我们去修改一下tomcat的端口号，默认是8080我们这边修改成80。修改conf/server.xml文件</p><p><img src="http://static.zybuluo.com/shenweizheng/m481dibr6w5yrraphxtm425r/image_1crtr550hecc8krk3e1spm18e14e.png" alt="image_1crtr550hecc8krk3e1spm18e14e.png-87.4kB"></p><p>接下来就是启动我们的tomcat先看一下能不能访问。启动程序和关闭程序在 bin目录下有一个startup.sh 和shutdown.sh<br><img src="http://static.zybuluo.com/shenweizheng/wfhcb1ul4humux1pedea0xuo/image_1crtr8o56c35t577c01j8n1e3d4r.png" alt="image_1crtr8o56c35t577c01j8n1e3d4r.png-23.9kB"></p><p>如果这一步遇到 -bash: startup.sh not command这种报错时<br><img src="http://static.zybuluo.com/shenweizheng/kmv88x25dvqaps4h54xmgps2/image_1crtrcipe1nla1bfd1honj199j458.png" alt="image_1crtrcipe1nla1bfd1honj199j458.png-3.3kB"></p><p>然后再执行startup.sh文件，这样就可以了。<br>那么我们这边开启了tomcat，使用外网ip加端口号访问一下看看情况。<br>如果你不能访问，首先配置一下云服务器的安全组，这边我们直接默认全部端口都放通，当然你也可以自定义配置一下规则。<br><img src="http://static.zybuluo.com/shenweizheng/5fo9j5yft5genj37nn2kuume/image_1crtrkq1k1d56sa6i1l18vf97t5l.png" alt="image_1crtrkq1k1d56sa6i1l18vf97t5l.png-134.3kB"></p><p>接下来重启一下服务器，不知道要不要重启，反正我是重启了一下。之后再去访问一下80端口，看能不能出现tomcat的主页，如果还是不行，那么接下去我们继续配置，这边安全组是已经都开启了，接下来我们查看80端口有没有开启。<br><img src="http://static.zybuluo.com/shenweizheng/ajfaio341tmx3l9idey0ylsq/image_1crtrscii1ls21anrl9417411oq762.png" alt="image_1crtrscii1ls21anrl9417411oq762.png-20.2kB"></p><p>我这边是已经配置好了的，所以80端口是开启的，如果你的80端口没有开启，那么下面我们去搞一下防火墙。<br>首先我们查看一下防火墙的状态<br><img src="http://static.zybuluo.com/shenweizheng/xnj3z2ymgshz32aylpes248g/image_1crts1red1bu81bfd50d4q1dio6f.png" alt="image_1crts1red1bu81bfd50d4q1dio6f.png-14.5kB"></p><p>发现现在防火墙是关闭的，这边我们先开启一下防火墙，不然待会出现filreWalld not runnuind的错<br><img src="http://static.zybuluo.com/shenweizheng/xs7nmzqmlgvdzwi1anzg7cvf/image_1crtsqrhpmbqirf1n2g17p0n2s6s.png" alt="image_1crtsqrhpmbqirf1n2g17p0n2s6s.png-10.2kB"></p><p>这边配置好了之后，我们在吧防火墙关闭一下<br><code>systemctl stop firewalld</code>，我们进入tomcat的bin目录下重启一下服务器。<br><img src="http://static.zybuluo.com/shenweizheng/objwn9diivl04baejjzuw4ru/image_1crtssq284be17641u821v391dgc79.png" alt="image_1crtssq284be17641u821v391dgc79.png-83.6kB"></p><p>如果你在关闭的时候遇到Neither the JAVA_HOME nor the JRE_HOME environment variable is defined这个报错的时候，使用vim修改一下bin目录下的setclasspath.sh，手动添加JAVA_HOME和JRE_HOME两个环境变量。<br><img src="http://static.zybuluo.com/shenweizheng/i7us0bl35qtytmr8ie00rchh/image_1crtt3g1d1lno1552p601sr325f83.png" alt="image_1crtt3g1d1lno1552p601sr325f83.png-269.3kB"></p><p>关闭之后，在启动一下tomcat，打开浏览器，访问公网ip访问，出现tomcat主页。如果还是没有出现的话，就无能为力了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前几天试了一下腾讯云的学生服务器，在配置tomcat的时候，配置了好久，一直都是无法访问主页，翻看了N多的博客，关了防火墙，配置了安全组，依旧无法访问，接下来改了tomcat的配置终于成功，记录一下。&lt;br&gt;我用的是腾讯云的学生服务器，操作系统是CentOS7.2 64位 
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>常用样式汇总</title>
    <link href="http://yoursite.com/2018/11/01/%E5%B8%B8%E7%94%A8%E6%A0%B7%E5%BC%8F%E6%B1%87%E6%80%BB/"/>
    <id>http://yoursite.com/2018/11/01/常用样式汇总/</id>
    <published>2018-11-01T13:45:17.265Z</published>
    <updated>2018-11-01T13:45:27.416Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-小手样式"><a href="#1-小手样式" class="headerlink" title="1.小手样式"></a>1.小手样式</h2><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cursor</span>: pointer</span><br></pre></td></tr></table></figure><h2 id="2-垂直居中"><a href="#2-垂直居中" class="headerlink" title="2.垂直居中"></a>2.垂直居中</h2><p>使用flex布局<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"outer"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"inner"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">display</span>: flex;</span><br><span class="line">    <span class="attribute">justify-content</span>: center;</span><br><span class="line">    <span class="attribute">align-items</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>vertical-align属性<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"outer"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"inner"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">display</span>: table-cell;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span> auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>绝对定位<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"outer"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"inner"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">position</span>: relative;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">    <span class="attribute">position</span>: absolute;</span><br><span class="line">    <span class="attribute">top</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">left</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">right</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">bottom</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">margin</span>: auto;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>after<br><figure class="highlight applescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"outer"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">div</span> <span class="built_in">class</span>=<span class="string">"inner"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line">&lt;/<span class="keyword">div</span>&gt;</span><br></pre></td></tr></table></figure></p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.outer</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">300px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid red;</span><br><span class="line">    <span class="attribute">text-align</span>: center;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.outer</span><span class="selector-pseudo">:after</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">100%</span>;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">''</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.inner</span> &#123;</span><br><span class="line">    <span class="attribute">width</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">height</span>: <span class="number">200px</span>;</span><br><span class="line">    <span class="attribute">border</span>: <span class="number">1px</span> solid black;</span><br><span class="line">    <span class="attribute">display</span>: inline-block;</span><br><span class="line">    <span class="attribute">vertical-align</span>: middle;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-vertical-align失效问题"><a href="#3-vertical-align失效问题" class="headerlink" title="3.vertical-align失效问题"></a>3.vertical-align失效问题</h2><p>vertical-align属性只对行内元素有效果，要想在块级元素失效先设置一下displayinline-block</p><h2 id="4-css渐变"><a href="#4-css渐变" class="headerlink" title="4. css渐变"></a>4. css渐变</h2><p>线性渐变-从上到下（默认）<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#grad</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(red, blue); <span class="comment">/* Safari 5.1 - 6.0 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-o-linear-gradient</span>(red, blue); <span class="comment">/* Opera 11.1 - 12.0 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-moz-linear-gradient</span>(red, blue); <span class="comment">/* Firefox 3.6 - 15 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(red, blue); <span class="comment">/* 标准的语法 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>线性渐变-从左到右<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#grad</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(left, red , blue); <span class="comment">/* Safari 5.1 - 6.0 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-o-linear-gradient</span>(right, red, blue); <span class="comment">/* Opera 11.1 - 12.0 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-moz-linear-gradient</span>(right, red, blue); <span class="comment">/* Firefox 3.6 - 15 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to right, red , blue); <span class="comment">/* 标准的语法 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>线性渐变 - 对角<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#grad</span> &#123;</span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-webkit-linear-gradient</span>(left top, red , blue); <span class="comment">/* Safari 5.1 - 6.0 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-o-linear-gradient</span>(bottom right, red, blue); <span class="comment">/* Opera 11.1 - 12.0 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">-moz-linear-gradient</span>(bottom right, red, blue); <span class="comment">/* Firefox 3.6 - 15 */</span></span><br><span class="line">  <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(to bottom right, red , blue); <span class="comment">/* 标准的语法 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-小手样式&quot;&gt;&lt;a href=&quot;#1-小手样式&quot; class=&quot;headerlink&quot; title=&quot;1.小手样式&quot;&gt;&lt;/a&gt;1.小手样式&lt;/h2&gt;&lt;figure class=&quot;highlight arduino&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;g
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>window.open被拦截解决</title>
    <link href="http://yoursite.com/2018/10/28/window.open%E8%A2%AB%E6%8B%A6%E6%88%AA/"/>
    <id>http://yoursite.com/2018/10/28/window.open被拦截/</id>
    <published>2018-10-28T04:24:31.476Z</published>
    <updated>2018-10-28T04:24:46.586Z</updated>
    
    <content type="html"><![CDATA[<p>项目开发中遇到window.open写在回调里被浏览器拦截.<br>解决办法是在请求时新开一个tab页，然后再请求的回调里修改这个tab页的地址.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> newWindow = <span class="built_in">window</span>.open(<span class="string">'about:blank'</span>); <span class="comment">//  新开一个tab页返回一个window对象</span></span><br><span class="line">axios.post(url&#125;)</span><br><span class="line">    .then(<span class="function"><span class="params">response</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(response.data.status.code === <span class="number">1</span>)&#123;</span><br><span class="line">            newWindow.location.href = <span class="string">''</span> <span class="comment">//  修改新开页面的地址</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">    .catch(<span class="function"><span class="params">error</span>=&gt;</span>&#123;</span><br><span class="line">        <span class="built_in">console</span>.log(error);</span><br><span class="line">    &#125;)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;项目开发中遇到window.open写在回调里被浏览器拦截.&lt;br&gt;解决办法是在请求时新开一个tab页，然后再请求的回调里修改这个tab页的地址.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>react应用中mobx未检测到数组的更新</title>
    <link href="http://yoursite.com/2018/10/28/react%E5%BA%94%E7%94%A8%E4%B8%ADmobx%E6%9C%AA%E6%A3%80%E6%B5%8B%E5%88%B0%E6%95%B0%E7%BB%84%E7%9A%84%E6%9B%B4%E6%96%B0/"/>
    <id>http://yoursite.com/2018/10/28/react应用中mobx未检测到数组的更新/</id>
    <published>2018-10-28T03:33:28.314Z</published>
    <updated>2018-10-28T03:33:35.510Z</updated>
    
    <content type="html"><![CDATA[<p>在mobx中定义一个可观察的数组<br><figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Store</span>&#123;</span></span><br><span class="line">    @observable testArray = [];</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>在组件里面引用这个store<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">testArray.map(<span class="function"><span class="params">item</span>=&gt;</span>(</span><br><span class="line">    &lt;span&gt;&#123;item&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">))</span></span><br></pre></td></tr></table></figure></p><p>这个打印这个testArray数组会发现这个时候的数组类型已经不是我们常规的array类型了，已经被mobx转换成了observableArray类型的数组，这种的如果你的store里面只有这一个数组没有其他变量的时候，更新整个数组，除非你是将这个数组置为空，不然组件是不会观察到他的改变，就不会重新render了<br>解决办法是：<br>在组件中使用这个数组的时候，slice()一下转变成我们正常的js类型的array就可以了<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">testArray.slice().map(<span class="function"><span class="params">item</span>=&gt;</span>(</span><br><span class="line">    &lt;span&gt;&#123;item&#125;&lt;<span class="regexp">/span&gt;</span></span><br><span class="line"><span class="regexp">))</span></span><br></pre></td></tr></table></figure></p><p>具体slice的地方可以是在store里面也可以在组件里面，组件里面就像上面写的那样,store里面就是先得到testArray然后slice一下，在把新的数组赋值给他。<br>如果遇到使用数组的时候出现一些看不懂的报错，排除数组越界的一些错误，多半是因为observableArray类型的问题，这个时候不妨slice()一下试试。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在mobx中定义一个可观察的数组&lt;br&gt;&lt;figure class=&quot;highlight coffeescript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>hexo博客配置</title>
    <link href="http://yoursite.com/2018/10/27/hexo%E5%8D%9A%E5%AE%A2%E9%85%8D%E7%BD%AE/"/>
    <id>http://yoursite.com/2018/10/27/hexo博客配置/</id>
    <published>2018-10-27T09:41:26.428Z</published>
    <updated>2018-10-27T09:50:53.143Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-网站图标更换"><a href="#1-网站图标更换" class="headerlink" title="1.网站图标更换"></a>1.网站图标更换</h2><p>themes\hexo-theme-Annie\layout_partial\head.ejs<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;link <span class="attribute">href</span>=<span class="string">"&lt;%- config.root %&gt;img/favicon.ico"</span> <span class="attribute">rel</span>=<span class="string">"Shortcut Icon"</span> <span class="attribute">type</span>=<span class="string">"image/ico"</span>&gt;</span><br></pre></td></tr></table></figure></p><p>我中间这个hexo-theme-Annie 是我的主题名字，只要路径差不多，找到layout_partial\head.ejs这个文件就对了，把你要换的那个ico文件放在根目录的public\img文件里面就行了，就是你放静态文件的那个目录。</p><h2 id="2-主题更换"><a href="#2-主题更换" class="headerlink" title="2.主题更换"></a>2.主题更换</h2><p>可以去hexo theme的官网找到你想要的主题，<a href="https://hexo.io/themes/" target="_blank" rel="noopener">hexo-theme</a>选择你喜欢的主题,以我的为例，我选的是Annie<img src="http://static.zybuluo.com/shenweizheng/91gzkw8d7exfxt76rujuznus/TIM%E6%88%AA%E5%9B%BE20181024000407.png" alt="TIM截图20181024000407.png-41.1kB"><br>然后点击这个主题，就可以找到这个主题的博客拥有者，这时候观察浏览器的地址栏的路由，<a href="https://sariay.github.io/" target="_blank" rel="noopener">https://sariay.github.io/</a> github.io前面这个sariay就是博主的github用户名了<br>然后我们主要在进 <a href="https://github.com/博主用户名，这里就是https://github.com/sariay" target="_blank" rel="noopener">https://github.com/博主用户名，这里就是https://github.com/sariay</a> 就可以找到博主的仓库了<br><img src="http://static.zybuluo.com/shenweizheng/lw0roum747u4lwi79scp4o3x/TIM%E6%88%AA%E5%9B%BE20181024000712.png" alt="TIM截图20181024000712.png-207.9kB"><br>这里我们找到我们所选的主题 hexo-theme-Annie 点进去<br><img src="http://static.zybuluo.com/shenweizheng/di0v7n85s3nfxxdjo44my531/TIM%E6%88%AA%E5%9B%BE20181024000819.png" alt="TIM截图20181024000819.png-109.5kB"><br>复制一下网址，然后我们cd进我们的博客文件夹，右击git bash here<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="keyword">clone</span> <span class="title">https</span>://github.com/Sariay/hexo-theme-Annie.git themes/hexo-theme-Annie</span><br></pre></td></tr></table></figure></p><p>这样我们就可以吧主题克隆到我们的本地，然后需求修改一下博客的配置文件_config.yml 找到theme字段<br><figure class="highlight xl"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">theme</span>: hexo-<span class="built_in">theme</span>-Annie</span><br></pre></td></tr></table></figure></p><p>修改theme后面的值是我们刚刚克隆下来的主题名，注意克隆下的那个主题文件夹不要去修改他的文件夹的名字，这边配置文件修改完之后，启动下本地服务就会发现主题已经更新好了。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;1-网站图标更换&quot;&gt;&lt;a href=&quot;#1-网站图标更换&quot; class=&quot;headerlink&quot; title=&quot;1.网站图标更换&quot;&gt;&lt;/a&gt;1.网站图标更换&lt;/h2&gt;&lt;p&gt;themes\hexo-theme-Annie\layout_partial\head.ej
      
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>第一次使用hexo搭建博客的记录</title>
    <link href="http://yoursite.com/2018/10/26/%E7%AC%AC%E4%B8%80%E6%AC%A1%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E7%9A%84%E8%AE%B0%E5%BD%95/"/>
    <id>http://yoursite.com/2018/10/26/第一次使用hexo搭建博客的记录/</id>
    <published>2018-10-26T05:12:07.218Z</published>
    <updated>2018-10-27T09:50:46.523Z</updated>
    
    <content type="html"><![CDATA[<p>基于github的博客，搭建过程可谓可歌可泣，翻遍了配置文件，总的来说是成功了百分之八十。基本的形状已经搭建好了，评论的功能还未加入，等待后续添加。刚开始使用的是Jekyll的主题，个人觉得还是hexo的主题好看一点，主要是一开始使用Jekyll的主题直接崩掉了，汗。。。。</p><h2 id="1-创建一个github账户"><a href="#1-创建一个github账户" class="headerlink" title="1.创建一个github账户"></a>1.创建一个github账户</h2><p>这个直接官网创建 <a href="https://github.com/" target="_blank" rel="noopener">GitHub</a></p><h2 id="2-创建一个本地仓库"><a href="#2-创建一个本地仓库" class="headerlink" title="2.创建一个本地仓库"></a>2.创建一个本地仓库</h2><p><img src="http://static.zybuluo.com/shenweizheng/m90nw4nyb9ohg4tqv1ruaw8i/TIM%E6%88%AA%E5%9B%BE20181021221725.png" alt="创建本地仓库"><br><img src="http://static.zybuluo.com/shenweizheng/kcp6ug83piiw75khyr3pjrck/TIM%E6%88%AA%E5%9B%BE20181021221854.png" alt="填写基本信息"><br>这里要注意你的Repository name的格式必须是  用户名.github.io，记得勾选下面的初始化README，当然这个选不选应该是无所谓的.<br>这个创建完之后，你的博客地址就是 https://用户名.github.io</p><h2 id="3-安装Git，node"><a href="#3-安装Git，node" class="headerlink" title="3.安装Git，node"></a>3.安装Git，node</h2><p>我们要用到git命令和node命令的，这边安装教程就没有了，官网上都有的，git不好安装的话直接去360安全管家上安装，反正我是这么安装的git</p><h2 id="4-配置git生成SSHkey"><a href="#4-配置git生成SSHkey" class="headerlink" title="4. 配置git生成SSHkey"></a>4. 配置git生成SSHkey</h2><p>鼠标右击会有一个 Git BashHere的菜单，选择这个，打开的就是我们Git命令行的页面了，首先设置一下全局的name和email<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ git<span class="built_in"> config </span>--global user.name <span class="string">"你的GitHub用户名"</span></span><br><span class="line">git<span class="built_in"> config </span>--global user.email <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure></p><p>配置SSHkey<br><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -<span class="built_in">t</span> rsa -C <span class="string">"你的GitHub注册邮箱"</span></span><br></pre></td></tr></table></figure></p><p>如果你不需要修改存放路劲的话，一路回车，最后生成的sshkey在C:\Users\Administrator.ssh\id_rsa.pub这个里面<br>绑定SSHKey<br><img src="http://static.zybuluo.com/shenweizheng/yq5z8046ndm8lwqey2dre8w4/TIM%E6%88%AA%E5%9B%BE20181021223352.png" alt="TIM截图20181021223352.png-13.3kB"><br><img src="http://static.zybuluo.com/shenweizheng/6zihqrjaxju7inxwces2gjp3/TIM%E6%88%AA%E5%9B%BE20181021223452.png" alt="TIM截图20181021223452.png-55.5kB"><br>New SShkey  之后的title这个随意，key的内容是你C:\Users\Administrator.ssh\id_rsa.pub这个文件里面的内容你需要都复制过来</p><h2 id="5-安装Hexo"><a href="#5-安装Hexo" class="headerlink" title="5.安装Hexo"></a>5.安装Hexo</h2><p>在磁盘里新建一个文件夹 例如我在F盘新建一个myBlog的文件夹，进入该文件夹，鼠标右击git bash here<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-cli g</span><br><span class="line">npm <span class="keyword">install</span> hexo -g</span><br></pre></td></tr></table></figure></p><p>hexo-cli和hexo都全局安装一下<br><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo v</span></span><br></pre></td></tr></table></figure></p><p>通过这个命令可以看一下hexo是不是装好了，如果出现 hexo 不是command这种报错的，表明环境变量没有配置好，需要配置一下环境变量，hexo在之前的版本好像是会自己配置环境变量，但是现在不行了，需要我们自己手动配置。<br>首先找到安装 hexo 的路径，例如我的是D:\nodejs\npm_global_modules\node_modules\hexo\node_modules<br>这边有一个问题就是node全局安装的模块的路径，默认都是在C盘，这样太占空间了，这个如有需要自行百度一下如何修改node全局模块的安装路径，我是改过了，C盘太小承受不住。回到正题，找到hexo的安装路径后，打开计算机的环境变量，在系统变量新建 HEXOPATH 变量值是我们找到的hexo安装目录，例如我的是D:\nodejs\npm_global_modules\node_modules\hexo\node_modules 这个要注意要hexo前面的路径每个人不一样，但是从hexo开始到后面的路径肯定是和我一样的。<br>要定位到hexo的node_modules下。创建完系统变量后，在环境变量里找到Path变量，点击编辑，在末尾添加<br><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">;<span class="meta">%</span>HEXOPATH<span class="meta">%</span>\.bi<span class="symbol">n</span></span><br></pre></td></tr></table></figure></p><p>注意这边的分号，如果本来path的末尾有分号的话就不用加了。配置完环境变量之后，cmd进命令行 hexo v看是不是能成功打印出hexo的版本号，类似于这样<br><img src="http://static.zybuluo.com/shenweizheng/qreltan9nvok2lwmp6opnidy/TIM%E6%88%AA%E5%9B%BE20181021225244.png" alt="TIM截图20181021225244.png-13.5kB"></p><h2 id="6-初始化hexo文件夹"><a href="#6-初始化hexo文件夹" class="headerlink" title="6.初始化hexo文件夹"></a>6.初始化hexo文件夹</h2><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">hexo init blog</span></span><br></pre></td></tr></table></figure><p>使用hexo init命令初始化一个叫blog的文件夹，然后<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> <span class="string">./blog</span></span><br></pre></td></tr></table></figure></p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span></span><br></pre></td></tr></table></figure><p>进入刚刚初始化的文件夹,安装hexo的相关配置<br>安装hexo的其他插件，在博客配置中需要用到<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> hexo-<span class="keyword">server</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-<span class="keyword">admin</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">archive</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-feed <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-<span class="keyword">search</span> <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-tag <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-deployer-git <span class="comment">--save</span></span><br><span class="line">npm <span class="keyword">install</span> hexo-generator-sitemap <span class="comment">--save</span></span><br></pre></td></tr></table></figure></p><h2 id="7-本地访问"><a href="#7-本地访问" class="headerlink" title="7.本地访问"></a>7.本地访问</h2><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">生成静态页面</span><br><span class="line">hexo <span class="keyword">generate</span></span><br><span class="line">开启本地服务器</span><br><span class="line">hexo s</span><br><span class="line">访问地址</span><br><span class="line">http:<span class="comment">//localhost:4000/</span></span><br></pre></td></tr></table></figure><h2 id="8-部署github"><a href="#8-部署github" class="headerlink" title="8.部署github"></a>8.部署github</h2><p>在部署之前我们需要修改一下博客的配置，在blog/_config.yml为文件中找到deploy这个词，这个是配置github的<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">type</span>: git</span><br><span class="line">#这里是第二部创建的仓库的地址</span><br><span class="line"><span class="attribute">repo</span>: git<span class="variable">@github</span>.<span class="attribute">com</span>:git用户名/git用户户名.github.io.git</span><br><span class="line">#部署的分支</span><br><span class="line"><span class="attribute">branch</span>: master</span><br></pre></td></tr></table></figure></p><p>修改完配置之后<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#清空静态页面</span></span><br><span class="line">hexo clean</span><br><span class="line"><span class="meta">#生成静态页面</span></span><br><span class="line">hexo generate</span><br><span class="line"><span class="meta">#部署 </span></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure></p><p>输入你的博客地址 https://用户名.github.io 就可以访问了<br>hexo的主题更换配置以及hexo博客的配置将在下一篇写。</p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;基于github的博客，搭建过程可谓可歌可泣，翻遍了配置文件，总的来说是成功了百分之八十。基本的形状已经搭建好了，评论的功能还未加入，等待后续添加。刚开始使用的是Jekyll的主题，个人觉得还是hexo的主题好看一点，主要是一开始使用Jekyll的主题直接崩掉了，汗。。。。
      
    
    </summary>
    
      <category term="hexo" scheme="http://yoursite.com/categories/hexo/"/>
    
    
  </entry>
  
  <entry>
    <title>关于springboot post方法参数为两个实体类的解决办法</title>
    <link href="http://yoursite.com/2018/10/26/%E5%85%B3%E4%BA%8Espringboot%20post%E6%96%B9%E6%B3%95%E5%8F%82%E6%95%B0%E4%B8%BA%E4%B8%A4%E4%B8%AA%E5%AE%9E%E4%BD%93%E7%B1%BB%E7%9A%84%E8%A7%A3%E5%86%B3%E5%8A%9E%E6%B3%95/"/>
    <id>http://yoursite.com/2018/10/26/关于springboot post方法参数为两个实体类的解决办法/</id>
    <published>2018-10-26T05:12:07.175Z</published>
    <updated>2018-10-27T09:48:55.500Z</updated>
    
    <content type="html"><![CDATA[<p>前端调用后端api某个post方法的时候，如果发现方法的参数为两个实体类的时候，我们像往常一样传参，后台会发生接收不到参数的问题。</p><h2 id="1-分装成dto"><a href="#1-分装成dto" class="headerlink" title="1.分装成dto"></a>1.分装成dto</h2><p>如果两个参数都是实体类的话，可以采用将两个实体类封装成一个实体类的方法。比如说有两个实体类，Techer和Course 这是两个pojo 那么我们可以定义一个实体类叫做 TeacherCourseDto 他的属性只有两个，一个是Teacher teacher一个是Course course 这样前台传参的时候<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">    <span class="attribute">teacher</span>: value1,</span><br><span class="line">    course: value2</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这样就可以了</p><h2 id="2-采用-InitBinder注解"><a href="#2-采用-InitBinder注解" class="headerlink" title="2.采用@InitBinder注解"></a>2.采用@InitBinder注解</h2><figure class="highlight aspectj"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@InitBinder</span>(<span class="string">"student"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">initBinderStudent</span><span class="params">(WebDataBinder binder)</span></span>&#123;</span><br><span class="line">      binder.setFieldDefaultPrefix(<span class="string">"student."</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@InitBinder</span>(<span class="string">"course"</span>)</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">void</span> <span class="title">initBinderCourse</span><span class="params">(WebDataBinder binder)</span></span>&#123;</span><br><span class="line">      binder.setFieldDefaultPrefix(<span class="string">"course."</span>);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>@InitBinder() 中间的value值，用于指定表单属性或请求参数的名字，符合该名字的将使用此处的DataBinder<br>注意： binder.setFieldDefaultPrefix(“student.”)，这里的”.”千万别忘记了！！！<br><figure class="highlight haxe"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Student</span> <span class="keyword"><span class="keyword">implements</span> <span class="type">Serializable</span></span></span>&#123;  </span><br><span class="line">  <span class="keyword">String</span> id;  </span><br><span class="line">  <span class="keyword">String</span> note;  </span><br><span class="line">  <span class="comment">//get..set....  </span></span><br><span class="line">&#125;  </span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Course</span> <span class="keyword"><span class="keyword">implements</span> <span class="type">Serializable</span></span></span>&#123;  </span><br><span class="line">  <span class="keyword">String</span> id;  </span><br><span class="line">  <span class="keyword">String</span> note;</span><br><span class="line">  <span class="comment">//set..get...  </span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>这边两个实体类，加上我们上面的initBinder注解 还要在ctrl上做点动作<br><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Controller</span>  </span><br><span class="line"><span class="meta">@RequestMapping</span>(<span class="string">"/classtest"</span>)  </span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> TestController &#123;  </span><br><span class="line">    <span class="comment">// 绑定变量名字和属性，参数封装进类  </span></span><br><span class="line">    <span class="meta">@InitBinder</span>(<span class="string">"student"</span>)  </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> initBinderUser(WebDataBinder binder) &#123;  </span><br><span class="line">        binder.setFieldDefaultPrefix(<span class="string">"student."</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="comment">// 绑定变量名字和属性，参数封装进类  </span></span><br><span class="line">    <span class="meta">@InitBinder</span>(<span class="string">"course"</span>)  </span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">void</span> initBinderAddr(WebDataBinder binder) &#123;  </span><br><span class="line">        binder.setFieldDefaultPrefix(<span class="string">"course."</span>);  </span><br><span class="line">    &#125;  </span><br><span class="line">      </span><br><span class="line">      </span><br><span class="line">    <span class="meta">@RequestMapping</span>(<span class="string">"/methodtest"</span>)  </span><br><span class="line">    <span class="meta">@ResponseBody</span>  </span><br><span class="line">   <span class="keyword">public</span> Map&lt;<span class="built_in">String</span>,<span class="built_in">Object</span>&gt; test(<span class="meta">@ModelAttribute</span>(<span class="string">"student"</span>) Student student,<span class="meta">@ModelAttribute</span>(<span class="string">"course"</span>) Course course)&#123;  </span><br><span class="line">        Map&lt;<span class="built_in">String</span>,<span class="built_in">Object</span>&gt; map=<span class="keyword">new</span> HashMap&lt;<span class="built_in">String</span>,<span class="built_in">Object</span>&gt;();  </span><br><span class="line">        map.put(<span class="string">"student"</span>, student);  </span><br><span class="line">        map.put(<span class="string">"course"</span>, course);  </span><br><span class="line">        <span class="keyword">return</span> map;  </span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure></p><p>ctrl上的参数使用@ModelAttribute注解指定，这样就可以实现参数两个实体类，不用再去多写一个dto了<br>当然这种方法也有缺陷，具体参考<a href="https://www.jianshu.com/p/59771cbf373d" target="_blank" rel="noopener">SpringMVC表单多对象传递小技巧——@InitBinder</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;前端调用后端api某个post方法的时候，如果发现方法的参数为两个实体类的时候，我们像往常一样传参，后台会发生接收不到参数的问题。&lt;/p&gt;
&lt;h2 id=&quot;1-分装成dto&quot;&gt;&lt;a href=&quot;#1-分装成dto&quot; class=&quot;headerlink&quot; title=&quot;1.分
      
    
    </summary>
    
    
  </entry>
  
</feed>
